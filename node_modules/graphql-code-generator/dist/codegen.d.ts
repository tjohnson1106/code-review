import { FileOutput, GraphQLSchema, DocumentFile, Types, CodegenPlugin } from 'graphql-codegen-core';
export interface GenerateOutputOptions {
    filename: string;
    plugins: Types.ConfiguredPlugin[];
    schema: GraphQLSchema;
    documents: DocumentFile[];
    pluginLoader: Types.PluginLoaderFn;
    inheritedConfig: {
        [key: string]: any;
    };
}
export interface ExecutePluginOptions {
    name: string;
    config: Types.PluginConfig;
    schema: GraphQLSchema;
    documents: DocumentFile[];
    outputFilename: string;
    allPlugins: Types.ConfiguredPlugin[];
    pluginLoader: Types.PluginLoaderFn;
}
export declare function executeCodegen(config: Types.Config): Promise<FileOutput[]>;
export declare function generateOutput(options: GenerateOutputOptions): Promise<FileOutput>;
export declare function getPluginByName(name: string, pluginLoader: Types.PluginLoaderFn): Promise<CodegenPlugin>;
export declare function executePlugin(options: ExecutePluginOptions): Promise<string>;
