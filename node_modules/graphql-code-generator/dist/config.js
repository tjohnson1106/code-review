"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var old_cli_config_1 = require("./old-cli-config");
var fs_1 = require("fs");
var path_1 = require("path");
var errors_1 = require("./errors");
var yml_1 = require("./yml");
function getCustomConfig() {
    var _a = process.argv, flag = _a[2], filepath = _a[3];
    if (!flag) {
        return null;
    }
    var flagIsConfig = ['--config', '-c'].includes(flag.toLocaleLowerCase());
    var hasFilepath = typeof filepath === 'string' && filepath.length > 0;
    var noOtherFlags = process.argv.length === 4;
    if (flagIsConfig && hasFilepath && noOtherFlags) {
        var configPath = path_1.resolve(process.cwd(), filepath);
        if (!fs_1.existsSync(configPath)) {
            throw new errors_1.DetailedError("Config " + configPath + " does not exist", "\n        Config " + configPath + " does not exist.\n\n          $ gql-gen --config " + configPath + "\n\n        Please make sure the --config points to a correct file.\n      ");
        }
        return configPath;
    }
    return null;
}
function loadAndParseConfig(filepath) {
    var ext = filepath.substr(filepath.lastIndexOf('.') + 1);
    switch (ext) {
        case 'yml':
            return yml_1.parseConfigFile(fs_1.readFileSync(filepath, 'utf-8'));
        case 'json':
            return JSON.parse(fs_1.readFileSync(filepath, 'utf-8'));
        default:
            throw new errors_1.DetailedError("Extension '" + ext + "' is not supported", "\n        Config " + filepath + " couldn't be parsed. Extension '" + ext + "' is not supported.\n      ");
    }
}
function createConfig() {
    var customConfigPath = getCustomConfig();
    var locations = [path_1.join(process.cwd(), './codegen.yml'), path_1.join(process.cwd(), './codegen.json')];
    if (customConfigPath) {
        locations.unshift(customConfigPath);
    }
    var filepath = locations.find(fs_1.existsSync);
    if (!filepath) {
        return old_cli_config_1.createConfigFromOldCli(old_cli_config_1.initCLI(process.argv));
    }
    return loadAndParseConfig(filepath);
}
exports.createConfig = createConfig;
//# sourceMappingURL=config.js.map