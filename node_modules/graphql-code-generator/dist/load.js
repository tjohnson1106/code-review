"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
var graphql_1 = require("graphql");
var errors_1 = require("./errors");
var introspection_from_url_1 = require("./loaders/schema/introspection-from-url");
var introspection_from_file_1 = require("./loaders/schema/introspection-from-file");
var schema_from_string_1 = require("./loaders/schema/schema-from-string");
var schema_from_typedefs_1 = require("./loaders/schema/schema-from-typedefs");
var schema_from_export_1 = require("./loaders/schema/schema-from-export");
var document_from_string_1 = require("./loaders/documents/document-from-string");
var documents_from_glob_1 = require("./loaders/documents/documents-from-glob");
function getCustomLoaderByPath(path) {
    var requiredModule = require(path);
    if (requiredModule && requiredModule.default && typeof requiredModule.default === 'function') {
        return requiredModule.default;
    }
    if (requiredModule && typeof requiredModule === 'function') {
        return requiredModule;
    }
    return null;
}
var documentsHandlers = [new document_from_string_1.DocumentFromString(), new documents_from_glob_1.DocumentsFromGlob()];
var schemaHandlers = [
    new introspection_from_url_1.IntrospectionFromUrlLoader(),
    new introspection_from_file_1.IntrospectionFromFileLoader(),
    new schema_from_string_1.SchemaFromString(),
    new schema_from_typedefs_1.SchemaFromTypedefs(),
    new schema_from_export_1.SchemaFromExport()
];
exports.loadSchema = function (schemaDef, config) { return __awaiter(_this, void 0, void 0, function () {
    var pointToSchema, defObject, loaderString, customSchemaLoader, returnedSchema, e_1, _i, schemaHandlers_1, handler, pointToSchema, options;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (!(typeof schemaDef === 'object' &&
                    schemaDef[Object.keys(schemaDef)[0]] &&
                    schemaDef[Object.keys(schemaDef)[0]].loader &&
                    typeof schemaDef[Object.keys(schemaDef)[0]].loader === 'string')) return [3 /*break*/, 6];
                pointToSchema = Object.keys(schemaDef)[0];
                defObject = schemaDef[pointToSchema];
                loaderString = defObject.loader;
                _a.label = 1;
            case 1:
                _a.trys.push([1, 5, , 6]);
                customSchemaLoader = getCustomLoaderByPath(loaderString);
                if (!customSchemaLoader) return [3 /*break*/, 3];
                return [4 /*yield*/, customSchemaLoader(pointToSchema, config, defObject)];
            case 2:
                returnedSchema = _a.sent();
                if (returnedSchema && returnedSchema instanceof graphql_1.GraphQLSchema) {
                    return [2 /*return*/, returnedSchema];
                }
                else {
                    throw new Error("Return value of a custom schema loader must be of type \"GraphQLSchema\"!");
                }
                return [3 /*break*/, 4];
            case 3: throw new Error("Unable to find a loader function! Make sure to export a default function from your file");
            case 4: return [3 /*break*/, 6];
            case 5:
                e_1 = _a.sent();
                throw new errors_1.DetailedError('Failed to load custom schema loader', "\n        Failed to load schema from " + pointToSchema + " using loader \"" + loaderString + "\":\n    \n        " + e_1.message + "\n      ");
            case 6:
                _i = 0, schemaHandlers_1 = schemaHandlers;
                _a.label = 7;
            case 7:
                if (!(_i < schemaHandlers_1.length)) return [3 /*break*/, 10];
                handler = schemaHandlers_1[_i];
                pointToSchema = null;
                options = {};
                if (typeof schemaDef === 'string') {
                    pointToSchema = schemaDef;
                }
                else if (typeof schemaDef === 'object') {
                    pointToSchema = Object.keys(schemaDef)[0];
                    options = schemaDef[pointToSchema];
                }
                return [4 /*yield*/, handler.canHandle(pointToSchema)];
            case 8:
                if (_a.sent()) {
                    return [2 /*return*/, handler.handle(pointToSchema, config, options)];
                }
                _a.label = 9;
            case 9:
                _i++;
                return [3 /*break*/, 7];
            case 10: throw new errors_1.DetailedError('Failed to load schema', "\n      Failed to load schema from " + schemaDef + ".\n  \n      GraphQL Code Generator supports:\n        - ES Modules and CommonJS exports\n        - Introspection JSON File\n        - URL of GraphQL endpoint\n        - Multiple files with type definitions\n        - String in config file\n  \n      Try to use one of above options and run codegen again.\n  \n    ");
        }
    });
}); };
exports.loadDocuments = function (documentDef, config) { return __awaiter(_this, void 0, void 0, function () {
    var pointToDoc, defObject, loaderString, customDocumentLoader, returned, e_2, _i, documentsHandlers_1, handler;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (!(typeof documentDef === 'object' &&
                    documentDef[Object.keys(documentDef)[0]] &&
                    documentDef[Object.keys(documentDef)[0]].loader &&
                    typeof documentDef[Object.keys(documentDef)[0]].loader === 'string')) return [3 /*break*/, 6];
                pointToDoc = Object.keys(documentDef)[0];
                defObject = documentDef[pointToDoc];
                loaderString = defObject.loader;
                _a.label = 1;
            case 1:
                _a.trys.push([1, 5, , 6]);
                customDocumentLoader = getCustomLoaderByPath(loaderString);
                if (!customDocumentLoader) return [3 /*break*/, 3];
                return [4 /*yield*/, customDocumentLoader(pointToDoc, config)];
            case 2:
                returned = _a.sent();
                if (returned && Array.isArray(returned)) {
                    return [2 /*return*/, returned];
                }
                else {
                    throw new Error("Return value of a custom schema loader must be an Array of: { filePath: string, content: DocumentNode }");
                }
                return [3 /*break*/, 4];
            case 3: throw new Error("Unable to find a loader function! Make sure to export a default function from your file");
            case 4: return [3 /*break*/, 6];
            case 5:
                e_2 = _a.sent();
                throw new errors_1.DetailedError('Failed to load custom documents loader', "\n        Failed to load documents from " + pointToDoc + " using loader \"" + loaderString + "\":\n    \n        " + e_2.message + "\n      ");
            case 6:
                _i = 0, documentsHandlers_1 = documentsHandlers;
                _a.label = 7;
            case 7:
                if (!(_i < documentsHandlers_1.length)) return [3 /*break*/, 10];
                handler = documentsHandlers_1[_i];
                return [4 /*yield*/, handler.canHandle(documentDef)];
            case 8:
                if (_a.sent()) {
                    return [2 /*return*/, handler.handle(documentDef, config)];
                }
                _a.label = 9;
            case 9:
                _i++;
                return [3 /*break*/, 7];
            case 10: return [2 /*return*/, []];
        }
    });
}); };
//# sourceMappingURL=load.js.map